use aoc_core::{{AocResult, Day}};

pub fn day() -> Day {{
    let mut solution = Day::new({});
    solution.part_1(|s: String| part_one(parse(s)));
    // solution.part_2(|s: String| part_two(parse(s)));
    // solution.add_file("files/test.in");
    solution.add_file("files/input.in");
    solution
}}

fn parse(input: String) -> Vec<String> {{
    todo!()
}}

fn part_one(values: Vec<String>) -> AocResult<u32> {{
    todo!()
}}

fn part_two(values: Vec<String>) -> AocResult<u32> {{
    todo!()
}}
